// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeNeed1.Service.Database;

#nullable disable

namespace WeNeed1.Service.Migrations
{
    [DbContext(typeof(WeNeed1Context))]
    [Migration("20250705155229_finalmigration")]
    partial class finalmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeNeed1.Service.Database.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Content = "Sjajna utakmica, baš uzbudljivo!",
                            Created = new DateTime(2025, 7, 6, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 102,
                            Content = "What a comeback in the last 10 minutes!",
                            Created = new DateTime(2025, 7, 6, 20, 15, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 2,
                            UserId = 11
                        },
                        new
                        {
                            Id = 103,
                            Content = "Ne mogu vjerovati da je završilo neriješeno.",
                            Created = new DateTime(2025, 7, 16, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 4,
                            UserId = 12
                        },
                        new
                        {
                            Id = 104,
                            Content = "Great effort by both teams.",
                            Created = new DateTime(2025, 7, 16, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 4,
                            UserId = 13
                        },
                        new
                        {
                            Id = 105,
                            Content = "Bravo za pobjedu, nastavimo ovako!",
                            Created = new DateTime(2025, 7, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 6,
                            UserId = 14
                        },
                        new
                        {
                            Id = 106,
                            Content = "Tough game, but well played.",
                            Created = new DateTime(2025, 7, 29, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 8,
                            UserId = 10
                        },
                        new
                        {
                            Id = 107,
                            Content = "Izvrsni servisi danas!",
                            Created = new DateTime(2025, 7, 29, 21, 15, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 8,
                            UserId = 11
                        },
                        new
                        {
                            Id = 108,
                            Content = "Amazing teamwork and strategy.",
                            Created = new DateTime(2025, 8, 4, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 10,
                            UserId = 12
                        },
                        new
                        {
                            Id = 109,
                            Content = "Čestitke na visokoj pobjedi!",
                            Created = new DateTime(2025, 8, 4, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 10,
                            UserId = 13
                        },
                        new
                        {
                            Id = 1010,
                            Content = "Close game, both teams showed heart.",
                            Created = new DateTime(2025, 8, 19, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            MatchId = 14,
                            UserId = 14
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MatchDate = new DateTime(2025, 7, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 101
                        },
                        new
                        {
                            Id = 2,
                            MatchDate = new DateTime(2025, 7, 5, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            Result = "2:1",
                            Status = 2,
                            TeamId = 102
                        },
                        new
                        {
                            Id = 3,
                            MatchDate = new DateTime(2025, 7, 10, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TeamId = 103
                        },
                        new
                        {
                            Id = 4,
                            MatchDate = new DateTime(2025, 7, 15, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "3:3",
                            Status = 2,
                            TeamId = 101
                        },
                        new
                        {
                            Id = 5,
                            MatchDate = new DateTime(2025, 7, 20, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 104
                        },
                        new
                        {
                            Id = 6,
                            MatchDate = new DateTime(2025, 7, 22, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            Result = "1:0",
                            Status = 2,
                            TeamId = 105
                        },
                        new
                        {
                            Id = 7,
                            MatchDate = new DateTime(2025, 7, 25, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 106
                        },
                        new
                        {
                            Id = 8,
                            MatchDate = new DateTime(2025, 7, 28, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "0:2",
                            Status = 2,
                            TeamId = 107
                        },
                        new
                        {
                            Id = 9,
                            MatchDate = new DateTime(2025, 8, 1, 18, 15, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 108
                        },
                        new
                        {
                            Id = 10,
                            MatchDate = new DateTime(2025, 8, 3, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Result = "4:1",
                            Status = 2,
                            TeamId = 109
                        },
                        new
                        {
                            Id = 11,
                            MatchDate = new DateTime(2025, 8, 7, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1010
                        },
                        new
                        {
                            Id = 12,
                            MatchDate = new DateTime(2025, 8, 10, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            Result = "2:2",
                            Status = 2,
                            TeamId = 1011
                        },
                        new
                        {
                            Id = 13,
                            MatchDate = new DateTime(2025, 8, 15, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TeamId = 1012
                        },
                        new
                        {
                            Id = 14,
                            MatchDate = new DateTime(2025, 8, 18, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "1:1",
                            Status = 2,
                            TeamId = 101
                        },
                        new
                        {
                            Id = 15,
                            MatchDate = new DateTime(2025, 8, 21, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 102
                        },
                        new
                        {
                            Id = 16,
                            MatchDate = new DateTime(2025, 8, 25, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "0:3",
                            Status = 2,
                            TeamId = 103
                        },
                        new
                        {
                            Id = 17,
                            MatchDate = new DateTime(2025, 9, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "2:2",
                            Status = 2,
                            TeamId = 1013
                        },
                        new
                        {
                            Id = 18,
                            MatchDate = new DateTime(2025, 9, 5, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1013
                        },
                        new
                        {
                            Id = 19,
                            MatchDate = new DateTime(2025, 9, 7, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "1:0",
                            Status = 2,
                            TeamId = 1014
                        },
                        new
                        {
                            Id = 20,
                            MatchDate = new DateTime(2025, 9, 10, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1014
                        },
                        new
                        {
                            Id = 21,
                            MatchDate = new DateTime(2025, 9, 12, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Result = "0:0",
                            Status = 2,
                            TeamId = 1015
                        },
                        new
                        {
                            Id = 22,
                            MatchDate = new DateTime(2025, 9, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1015
                        },
                        new
                        {
                            Id = 23,
                            MatchDate = new DateTime(2025, 9, 17, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            Result = "4:2",
                            Status = 2,
                            TeamId = 1016
                        },
                        new
                        {
                            Id = 24,
                            MatchDate = new DateTime(2025, 9, 20, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1016
                        },
                        new
                        {
                            Id = 25,
                            MatchDate = new DateTime(2025, 9, 22, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Result = "3:1",
                            Status = 2,
                            TeamId = 1017
                        },
                        new
                        {
                            Id = 26,
                            MatchDate = new DateTime(2025, 9, 25, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1017
                        },
                        new
                        {
                            Id = 27,
                            MatchDate = new DateTime(2025, 9, 27, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "2:4",
                            Status = 2,
                            TeamId = 1018
                        },
                        new
                        {
                            Id = 28,
                            MatchDate = new DateTime(2025, 9, 30, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1018
                        },
                        new
                        {
                            Id = 29,
                            MatchDate = new DateTime(2025, 10, 2, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "1:1",
                            Status = 2,
                            TeamId = 1019
                        },
                        new
                        {
                            Id = 30,
                            MatchDate = new DateTime(2025, 10, 5, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1019
                        },
                        new
                        {
                            Id = 31,
                            MatchDate = new DateTime(2025, 10, 7, 17, 15, 0, 0, DateTimeKind.Unspecified),
                            Result = "0:2",
                            Status = 2,
                            TeamId = 1020
                        },
                        new
                        {
                            Id = 32,
                            MatchDate = new DateTime(2025, 10, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1020
                        },
                        new
                        {
                            Id = 33,
                            MatchDate = new DateTime(2025, 10, 12, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            Result = "3:0",
                            Status = 2,
                            TeamId = 1021
                        },
                        new
                        {
                            Id = 34,
                            MatchDate = new DateTime(2025, 10, 15, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1021
                        },
                        new
                        {
                            Id = 35,
                            MatchDate = new DateTime(2025, 10, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "2:2",
                            Status = 2,
                            TeamId = 1022
                        },
                        new
                        {
                            Id = 36,
                            MatchDate = new DateTime(2025, 10, 20, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1022
                        },
                        new
                        {
                            Id = 37,
                            MatchDate = new DateTime(2025, 10, 22, 20, 15, 0, 0, DateTimeKind.Unspecified),
                            Result = "5:1",
                            Status = 2,
                            TeamId = 1023
                        },
                        new
                        {
                            Id = 38,
                            MatchDate = new DateTime(2025, 10, 25, 20, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1023
                        },
                        new
                        {
                            Id = 39,
                            MatchDate = new DateTime(2025, 10, 27, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = "1:3",
                            Status = 2,
                            TeamId = 1024
                        },
                        new
                        {
                            Id = 40,
                            MatchDate = new DateTime(2025, 10, 30, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TeamId = 1024
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.MatchAttendance", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttending")
                        .HasColumnType("bit");

                    b.HasKey("MatchId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("MatchAttendances");

                    b.HasData(
                        new
                        {
                            MatchId = 2,
                            UserId = 10,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 2,
                            UserId = 11,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 4,
                            UserId = 10,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 4,
                            UserId = 12,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 6,
                            UserId = 12,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 6,
                            UserId = 13,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 8,
                            UserId = 13,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 8,
                            UserId = 14,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 10,
                            UserId = 14,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 10,
                            UserId = 15,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 12,
                            UserId = 15,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 12,
                            UserId = 11,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 14,
                            UserId = 10,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 14,
                            UserId = 15,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 16,
                            UserId = 12,
                            IsAttending = true
                        },
                        new
                        {
                            MatchId = 16,
                            UserId = 13,
                            IsAttending = true
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SportsFieldId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportsFieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 201,
                            EndTime = new DateTime(2025, 7, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 100,
                            StartTime = new DateTime(2025, 7, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            Status = 2,
                            TotalPrice = 20m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 202,
                            CancellationReason = "Nevrijeme",
                            EndTime = new DateTime(2025, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 101,
                            StartTime = new DateTime(2025, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            Status = 3,
                            TotalPrice = 25m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 203,
                            EndTime = new DateTime(2025, 7, 5, 15, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 5, 14, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 204,
                            EndTime = new DateTime(2025, 7, 5, 18, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 5, 17, 0, 0, 0, DateTimeKind.Local),
                            Status = 4,
                            TotalPrice = 35m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 205,
                            EndTime = new DateTime(2025, 7, 4, 17, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 104,
                            StartTime = new DateTime(2025, 7, 4, 16, 0, 0, 0, DateTimeKind.Local),
                            Status = 2,
                            TotalPrice = 22m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 206,
                            CancellationReason = "Nevrijeme",
                            EndTime = new DateTime(2025, 7, 3, 14, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 105,
                            StartTime = new DateTime(2025, 7, 3, 13, 0, 0, 0, DateTimeKind.Local),
                            Status = 3,
                            TotalPrice = 20m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 207,
                            EndTime = new DateTime(2025, 7, 5, 19, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 106,
                            StartTime = new DateTime(2025, 7, 5, 18, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalPrice = 28m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 208,
                            EndTime = new DateTime(2025, 7, 5, 21, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 107,
                            StartTime = new DateTime(2025, 7, 5, 20, 0, 0, 0, DateTimeKind.Local),
                            Status = 4,
                            TotalPrice = 18m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 209,
                            EndTime = new DateTime(2025, 7, 7, 15, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 108,
                            StartTime = new DateTime(2025, 7, 7, 14, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalPrice = 24m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2010,
                            EndTime = new DateTime(2025, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 109,
                            StartTime = new DateTime(2025, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            Status = 2,
                            TotalPrice = 32m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2011,
                            CancellationReason = "Kvar na mreži",
                            EndTime = new DateTime(2025, 7, 8, 11, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 100,
                            StartTime = new DateTime(2025, 7, 8, 10, 0, 0, 0, DateTimeKind.Local),
                            Status = 3,
                            TotalPrice = 20m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2012,
                            EndTime = new DateTime(2025, 7, 2, 13, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 101,
                            StartTime = new DateTime(2025, 7, 2, 12, 0, 0, 0, DateTimeKind.Local),
                            Status = 4,
                            TotalPrice = 25m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2013,
                            EndTime = new DateTime(2025, 7, 4, 11, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2014,
                            EndTime = new DateTime(2025, 7, 5, 12, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2015,
                            CancellationReason = "Kvar na grijanju",
                            EndTime = new DateTime(2025, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 104,
                            StartTime = new DateTime(2025, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            Status = 3,
                            TotalPrice = 22m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2016,
                            EndTime = new DateTime(2025, 7, 5, 15, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 105,
                            StartTime = new DateTime(2025, 7, 5, 14, 0, 0, 0, DateTimeKind.Local),
                            Status = 4,
                            TotalPrice = 20m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2017,
                            EndTime = new DateTime(2025, 7, 7, 18, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 106,
                            StartTime = new DateTime(2025, 7, 7, 17, 0, 0, 0, DateTimeKind.Local),
                            Status = 2,
                            TotalPrice = 28m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2018,
                            EndTime = new DateTime(2025, 7, 4, 19, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 107,
                            StartTime = new DateTime(2025, 7, 4, 18, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TotalPrice = 18m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2019,
                            CancellationReason = "Nevrijeme",
                            EndTime = new DateTime(2025, 7, 5, 20, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 108,
                            StartTime = new DateTime(2025, 7, 5, 19, 0, 0, 0, DateTimeKind.Local),
                            Status = 3,
                            TotalPrice = 24m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2020,
                            EndTime = new DateTime(2025, 7, 6, 21, 0, 0, 0, DateTimeKind.Local),
                            SportsFieldId = 109,
                            StartTime = new DateTime(2025, 7, 6, 20, 0, 0, 0, DateTimeKind.Local),
                            Status = 4,
                            TotalPrice = 32m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2021,
                            EndTime = new DateTime(2025, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2022,
                            EndTime = new DateTime(2025, 7, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2023,
                            EndTime = new DateTime(2025, 7, 10, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 30m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2024,
                            EndTime = new DateTime(2025, 7, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 15, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2025,
                            CancellationReason = "Otkazano",
                            EndTime = new DateTime(2025, 7, 20, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 7, 20, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 30m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2026,
                            EndTime = new DateTime(2025, 8, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 8, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2027,
                            EndTime = new DateTime(2025, 8, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 8, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2028,
                            EndTime = new DateTime(2025, 6, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 6, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 30m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2029,
                            EndTime = new DateTime(2025, 6, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 6, 18, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2030,
                            EndTime = new DateTime(2025, 6, 22, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2025, 6, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2031,
                            EndTime = new DateTime(2026, 3, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2026, 3, 5, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 30m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2032,
                            EndTime = new DateTime(2026, 6, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2026, 6, 15, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2033,
                            EndTime = new DateTime(2024, 9, 25, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2024, 9, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 30m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2034,
                            CancellationReason = "Nevrijeme",
                            EndTime = new DateTime(2024, 11, 30, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2024, 11, 30, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 30m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2035,
                            EndTime = new DateTime(2024, 12, 24, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 102,
                            StartTime = new DateTime(2024, 12, 24, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2036,
                            EndTime = new DateTime(2025, 7, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2037,
                            EndTime = new DateTime(2025, 7, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 35m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2038,
                            EndTime = new DateTime(2025, 7, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 35m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2039,
                            EndTime = new DateTime(2025, 7, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 17, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2040,
                            CancellationReason = "Otkazano",
                            EndTime = new DateTime(2025, 7, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 7, 21, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 35m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2041,
                            EndTime = new DateTime(2025, 8, 4, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 8, 4, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 35m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2042,
                            EndTime = new DateTime(2025, 8, 9, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 8, 9, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2043,
                            EndTime = new DateTime(2025, 6, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 6, 14, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 35m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2044,
                            EndTime = new DateTime(2025, 6, 19, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 6, 19, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 35m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2045,
                            EndTime = new DateTime(2025, 6, 23, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2025, 6, 23, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2046,
                            EndTime = new DateTime(2026, 4, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2026, 4, 6, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 35m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2047,
                            EndTime = new DateTime(2026, 7, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2026, 7, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2048,
                            EndTime = new DateTime(2024, 8, 26, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2024, 8, 26, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 35m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2049,
                            CancellationReason = "Nevrijeme",
                            EndTime = new DateTime(2024, 10, 31, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2024, 10, 31, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 35m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2050,
                            EndTime = new DateTime(2024, 12, 25, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 103,
                            StartTime = new DateTime(2024, 12, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 35m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2051,
                            EndTime = new DateTime(2026, 1, 5, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 200,
                            StartTime = new DateTime(2026, 1, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 25m,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2052,
                            EndTime = new DateTime(2025, 9, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 201,
                            StartTime = new DateTime(2025, 9, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 30m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2053,
                            EndTime = new DateTime(2024, 6, 3, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 202,
                            StartTime = new DateTime(2024, 6, 3, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 20m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2054,
                            CancellationReason = "Nedostatak igrača",
                            EndTime = new DateTime(2024, 11, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 203,
                            StartTime = new DateTime(2024, 11, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 18m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2055,
                            EndTime = new DateTime(2026, 3, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 204,
                            StartTime = new DateTime(2026, 3, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 27m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2056,
                            EndTime = new DateTime(2025, 10, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 205,
                            StartTime = new DateTime(2025, 10, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 22m,
                            UserId = 14
                        },
                        new
                        {
                            Id = 2057,
                            EndTime = new DateTime(2024, 5, 11, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 206,
                            StartTime = new DateTime(2024, 5, 11, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 4,
                            TotalPrice = 28m,
                            UserId = 13
                        },
                        new
                        {
                            Id = 2058,
                            CancellationReason = "Loše vrijeme",
                            EndTime = new DateTime(2024, 8, 22, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 207,
                            StartTime = new DateTime(2024, 8, 22, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            TotalPrice = 23m,
                            UserId = 12
                        },
                        new
                        {
                            Id = 2059,
                            EndTime = new DateTime(2026, 2, 8, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 208,
                            StartTime = new DateTime(2026, 2, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            TotalPrice = 35m,
                            UserId = 11
                        },
                        new
                        {
                            Id = 2060,
                            EndTime = new DateTime(2025, 12, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SportsFieldId = 209,
                            StartTime = new DateTime(2025, 12, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            TotalPrice = 26m,
                            UserId = 11
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SportsCenterId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportsCenterId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Content = "Sjajno iskustvo, teren je bio vrhunski pripremljen!.",
                            Created = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.5m,
                            SportsCenterId = 5,
                            UserId = 10
                        },
                        new
                        {
                            Id = 102,
                            Content = "Osoblje je bilo ljubazno i susretljivo. Preporučujem svima!",
                            Created = new DateTime(2025, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 5.0m,
                            SportsCenterId = 6,
                            UserId = 11
                        },
                        new
                        {
                            Id = 103,
                            Content = "Odlična atmosfera i dobro održavani tereni.",
                            Created = new DateTime(2025, 6, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.8m,
                            SportsCenterId = 7,
                            UserId = 12
                        },
                        new
                        {
                            Id = 104,
                            Content = "Rezervacija je prošla glatko i bez ikakvih problema.",
                            Created = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.2m,
                            SportsCenterId = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 105,
                            Content = "Malo skuplje, ali vrijedno svake marke..",
                            Created = new DateTime(2025, 7, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.5m,
                            SportsCenterId = 9,
                            UserId = 14
                        },
                        new
                        {
                            Id = 106,
                            Content = "Fantastic experience overall.",
                            Created = new DateTime(2025, 7, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.8m,
                            SportsCenterId = 6,
                            UserId = 10
                        },
                        new
                        {
                            Id = 107,
                            Content = "Tereni su bili čisti, ali svlačionice bi mogle biti bolje.",
                            Created = new DateTime(2025, 7, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.7m,
                            SportsCenterId = 7,
                            UserId = 11
                        },
                        new
                        {
                            Id = 108,
                            Content = "Kvalitet opreme je bio iznad očekivanja.",
                            Created = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.0m,
                            SportsCenterId = 8,
                            UserId = 12
                        },
                        new
                        {
                            Id = 109,
                            Content = "Could use better lighting at night.",
                            Created = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.9m,
                            SportsCenterId = 9,
                            UserId = 13
                        },
                        new
                        {
                            Id = 1010,
                            Content = "Definitivno ću se ponovo vratiti!",
                            Created = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 5.0m,
                            SportsCenterId = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 1011,
                            Content = "Vrlo čist i dobro organizovan centar.",
                            Created = new DateTime(2025, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.6m,
                            SportsCenterId = 900,
                            UserId = 15
                        },
                        new
                        {
                            Id = 1012,
                            Content = "Sve je bilo odlično, osim parkinga.",
                            Created = new DateTime(2025, 6, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.9m,
                            SportsCenterId = 901,
                            UserId = 10
                        },
                        new
                        {
                            Id = 1013,
                            Content = "Topla preporuka za sve sportiste.",
                            Created = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.7m,
                            SportsCenterId = 902,
                            UserId = 11
                        },
                        new
                        {
                            Id = 1014,
                            Content = "Ljubazno osoblje i dobra oprema.",
                            Created = new DateTime(2025, 6, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.2m,
                            SportsCenterId = 903,
                            UserId = 12
                        },
                        new
                        {
                            Id = 1015,
                            Content = "Sve u svemu, pozitivno iskustvo.",
                            Created = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.0m,
                            SportsCenterId = 904,
                            UserId = 13
                        },
                        new
                        {
                            Id = 1016,
                            Content = "Malo skuplje, ali teren je fantastičan.",
                            Created = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.8m,
                            SportsCenterId = 905,
                            UserId = 14
                        },
                        new
                        {
                            Id = 1017,
                            Content = "Sve preporuke! Odlična organizacija.",
                            Created = new DateTime(2025, 7, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.9m,
                            SportsCenterId = 906,
                            UserId = 14
                        },
                        new
                        {
                            Id = 1018,
                            Content = "Zadovoljan uslugom i ambijentom.",
                            Created = new DateTime(2025, 7, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 4.3m,
                            SportsCenterId = 907,
                            UserId = 14
                        },
                        new
                        {
                            Id = 1019,
                            Content = "Tereni odlični, ali nema kafića u blizini.",
                            Created = new DateTime(2025, 7, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 3.7m,
                            SportsCenterId = 908,
                            UserId = 12
                        },
                        new
                        {
                            Id = 1020,
                            Content = "Sjajno iskustvo! Definitivno dolazim opet.",
                            Created = new DateTime(2025, 7, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Rating = 5.0m,
                            SportsCenterId = 909,
                            UserId = 11
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("SportsCenters");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            City = "Bugojno",
                            Description = "Dvorana u Bugojnu",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 5,
                            Name = "Sportska Dvorana Bugojno",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Zelenih Beretki 12"
                        },
                        new
                        {
                            Id = 6,
                            City = "Trebinje",
                            Description = "Sportski centar u Trebinju",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 6,
                            Name = "Centar za Sport Trebinje",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Obala Kulina Bana 7"
                        },
                        new
                        {
                            Id = 7,
                            City = "Sarajevo",
                            Description = "Savremeni sportski kompleks u Sarajevu",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 7,
                            Name = "Arena Sarajevo",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Ivana Gorana Kovačića 6"
                        },
                        new
                        {
                            Id = 8,
                            City = "Mostar",
                            Description = "Moderna dvorana u Mostaru",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 8,
                            Name = "Sportska Arena Mostar",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Zelenih Beretki 24"
                        },
                        new
                        {
                            Id = 9,
                            City = "Zenica",
                            Description = "Najmoderniji sportski centar u Zenici",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 9,
                            Name = "FitZone Zenica",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Zelenih Beretki 66"
                        },
                        new
                        {
                            Id = 900,
                            City = "Travnik",
                            Description = "Sportska dvorana u Travniku",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 900,
                            Name = "Arena Travnik",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Bosanska 13"
                        },
                        new
                        {
                            Id = 901,
                            City = "Brčko",
                            Description = "Sportska hala u Brčkom",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 901,
                            Name = "Dvorana Brčko",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Trg Mladih 21"
                        },
                        new
                        {
                            Id = 902,
                            City = "Goražde",
                            Description = "Multifunkcionalni centar u Goraždu",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 902,
                            Name = "Sportski Centar Goražde",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Ribarska 5"
                        },
                        new
                        {
                            Id = 903,
                            City = "Doboj",
                            Description = "Sportski prostor u Doboju",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 903,
                            Name = "Rekreativni Centar Doboj",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Stjepana Radića 9"
                        },
                        new
                        {
                            Id = 904,
                            City = "Banja Luka",
                            Description = "Savremeni sportski kompleks",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 904,
                            Name = "Centar Banja Luka",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Kralja Petra I 17"
                        },
                        new
                        {
                            Id = 905,
                            City = "Gradačac",
                            Description = "Centar za sport i rekreaciju",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 905,
                            Name = "Gradačac Arena",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Branilaca grada 3"
                        },
                        new
                        {
                            Id = 906,
                            City = "Bijeljina",
                            Description = "Fitness i sportski centar u Bijeljini",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 906,
                            Name = "Bijeljina FitZone",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Njegoševa 44"
                        },
                        new
                        {
                            Id = 907,
                            City = "Konjic",
                            Description = "Sportska dvorana u Konjicu",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 907,
                            Name = "Konjic Sports Hall",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Varda 11"
                        },
                        new
                        {
                            Id = 908,
                            City = "Bihać",
                            Description = "Moderna sportska arena u Bihaću",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 908,
                            Name = "Bihać Sports Arena",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Una bb"
                        },
                        new
                        {
                            Id = 909,
                            City = "Travnik",
                            Description = "Novi centar za sport i rekreaciju",
                            EndTime = new TimeSpan(0, 23, 0, 0, 0),
                            ManagerId = 909,
                            Name = "Travnik Sports Hub",
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            Street = "Hasana Brkića 8"
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsCenterRecommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseSportsCenterId")
                        .HasColumnType("int");

                    b.Property<int>("RecommendedSportsCenterId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BaseSportsCenterId");

                    b.HasIndex("RecommendedSportsCenterId");

                    b.ToTable("SportsCenterRecommendations");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SportType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SportsCenterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportsCenterId");

                    b.ToTable("SportsFields");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Capacity = 10,
                            Description = "Vanjski teren za mali fudbal",
                            Name = "Teren 1 - Donji Vakuf",
                            PricePerHour = 20m,
                            SportType = "Fudbal",
                            SportsCenterId = 5
                        },
                        new
                        {
                            Id = 101,
                            Capacity = 10,
                            Description = "Unutrašnji teren za košarku",
                            Name = "Teren 2 - Donji Vakuf",
                            PricePerHour = 25m,
                            SportType = "Košarka",
                            SportsCenterId = 5
                        },
                        new
                        {
                            Id = 102,
                            Capacity = 4,
                            Description = "Teniski teren sa tvrdom podlogom",
                            Name = "Teren 1 - Sarajevo",
                            PricePerHour = 30m,
                            SportType = "Tenis",
                            SportsCenterId = 6
                        },
                        new
                        {
                            Id = 103,
                            Capacity = 12,
                            Description = "Umjetna trava, reflektori za noćne termine",
                            Name = "Teren 2 - Sarajevo",
                            PricePerHour = 35m,
                            SportType = "Fudbal",
                            SportsCenterId = 6
                        },
                        new
                        {
                            Id = 104,
                            Capacity = 10,
                            Description = "Teren sa parketom i tribinama",
                            Name = "Teren 1 - Mostar",
                            PricePerHour = 22m,
                            SportType = "Košarka",
                            SportsCenterId = 7
                        },
                        new
                        {
                            Id = 105,
                            Capacity = 8,
                            Description = "Unutrašnji teren za odbojku",
                            Name = "Teren 2 - Mostar",
                            PricePerHour = 20m,
                            SportType = "Odbojka",
                            SportsCenterId = 7
                        },
                        new
                        {
                            Id = 106,
                            Capacity = 14,
                            Description = "Moderno opremljen fudbalski teren",
                            Name = "Teren 1 - Tuzla",
                            PricePerHour = 28m,
                            SportType = "Fudbal",
                            SportsCenterId = 8
                        },
                        new
                        {
                            Id = 107,
                            Capacity = 2,
                            Description = "Teren sa zemljanom podlogom",
                            Name = "Teren 2 - Tuzla",
                            PricePerHour = 18m,
                            SportType = "Tenis",
                            SportsCenterId = 8
                        },
                        new
                        {
                            Id = 108,
                            Capacity = 10,
                            Description = "Vanjski teren, odličan za ljetne termine",
                            Name = "Teren 1 - Zenica",
                            PricePerHour = 24m,
                            SportType = "Košarka",
                            SportsCenterId = 9
                        },
                        new
                        {
                            Id = 109,
                            Capacity = 12,
                            Description = "Teren sa vještačkom travom i reflektorima",
                            Name = "Teren 2 - Zenica",
                            PricePerHour = 32m,
                            SportType = "Fudbal",
                            SportsCenterId = 9
                        },
                        new
                        {
                            Id = 200,
                            Capacity = 10,
                            Description = "Natkriveni teren pogodan za sve vremenske uslove.",
                            Name = "Teren 1 - Travnik",
                            PricePerHour = 25m,
                            SportType = "Košarka",
                            SportsCenterId = 900
                        },
                        new
                        {
                            Id = 201,
                            Capacity = 12,
                            Description = "Teren sa reflektorima i vještačkom travom.",
                            Name = "Teren 1 - Brčko",
                            PricePerHour = 30m,
                            SportType = "Fudbal",
                            SportsCenterId = 901
                        },
                        new
                        {
                            Id = 202,
                            Capacity = 4,
                            Description = "Teren sa crvenom šljakom idealan za rekreativce.",
                            Name = "Teren 1 - Goražde",
                            PricePerHour = 20m,
                            SportType = "Tenis",
                            SportsCenterId = 902
                        },
                        new
                        {
                            Id = 203,
                            Capacity = 6,
                            Description = "Teren za odbojku na pijesku, otvoreni tip.",
                            Name = "Teren 1 - Doboj",
                            PricePerHour = 18m,
                            SportType = "Odbojka",
                            SportsCenterId = 903
                        },
                        new
                        {
                            Id = 204,
                            Capacity = 10,
                            Description = "Dvoranski teren, klimatiziran prostor.",
                            Name = "Teren 1 - Banja Luka",
                            PricePerHour = 27m,
                            SportType = "Košarka",
                            SportsCenterId = 904
                        },
                        new
                        {
                            Id = 205,
                            Capacity = 10,
                            Description = "Mini teren pogodan za futsal i treninge.",
                            Name = "Teren 1 - Gradačac",
                            PricePerHour = 22m,
                            SportType = "Fudbal",
                            SportsCenterId = 905
                        },
                        new
                        {
                            Id = 206,
                            Capacity = 2,
                            Description = "Moderno opremljeni teren sa LED osvjetljenjem.",
                            Name = "Teren 1 - Bijeljina",
                            PricePerHour = 28m,
                            SportType = "Tenis",
                            SportsCenterId = 906
                        },
                        new
                        {
                            Id = 207,
                            Capacity = 10,
                            Description = "Teren uz rijeku, odličan ambijent za igru.",
                            Name = "Teren 1 - Konjic",
                            PricePerHour = 23m,
                            SportType = "Košarka",
                            SportsCenterId = 907
                        },
                        new
                        {
                            Id = 208,
                            Capacity = 14,
                            Description = "Teren sa prirodnom travom i tribinama.",
                            Name = "Teren 1 - Bihać",
                            PricePerHour = 35m,
                            SportType = "Fudbal",
                            SportsCenterId = 908
                        },
                        new
                        {
                            Id = 209,
                            Capacity = 8,
                            Description = "Multifunkcionalni teren u modernom ambijentu.",
                            Name = "Teren 1 - Travnik Hub",
                            PricePerHour = 26m,
                            SportType = "Košarka",
                            SportsCenterId = 909
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsTeamRecommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseTeamId")
                        .HasColumnType("int");

                    b.Property<int>("RecommendedTeamId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BaseTeamId");

                    b.HasIndex("RecommendedTeamId");

                    b.ToTable("SportsTeamRecommendations");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Squad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Squads");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Name = "Crni Lavovi",
                            TeamId = 101
                        },
                        new
                        {
                            Id = 102,
                            Name = "Bijeli Vukovi",
                            TeamId = 101
                        },
                        new
                        {
                            Id = 103,
                            Name = "Pješčani Šampioni",
                            TeamId = 102
                        },
                        new
                        {
                            Id = 104,
                            Name = "Zlatne Zvijezde",
                            TeamId = 102
                        },
                        new
                        {
                            Id = 105,
                            Name = "Nebeski Skakači",
                            TeamId = 103
                        },
                        new
                        {
                            Id = 106,
                            Name = "Ulični Letaci",
                            TeamId = 103
                        },
                        new
                        {
                            Id = 107,
                            Name = "Teniski Majstori",
                            TeamId = 104
                        },
                        new
                        {
                            Id = 108,
                            Name = "Brzi Servisi",
                            TeamId = 104
                        },
                        new
                        {
                            Id = 109,
                            Name = "Odbojkaške Nindže",
                            TeamId = 105
                        },
                        new
                        {
                            Id = 1010,
                            Name = "Skakači",
                            TeamId = 105
                        },
                        new
                        {
                            Id = 1011,
                            Name = "Rukometni Ratnici",
                            TeamId = 106
                        },
                        new
                        {
                            Id = 1012,
                            Name = "Zidari Odbrane",
                            TeamId = 106
                        },
                        new
                        {
                            Id = 1013,
                            Name = "Munje",
                            TeamId = 107
                        },
                        new
                        {
                            Id = 1014,
                            Name = "Gromovi",
                            TeamId = 107
                        },
                        new
                        {
                            Id = 1015,
                            Name = "Dvoranski Kraljevi",
                            TeamId = 108
                        },
                        new
                        {
                            Id = 1016,
                            Name = "Taktičari",
                            TeamId = 108
                        },
                        new
                        {
                            Id = 1017,
                            Name = "Plažni Vojnici",
                            TeamId = 109
                        },
                        new
                        {
                            Id = 1018,
                            Name = "Pješčane Laste",
                            TeamId = 109
                        },
                        new
                        {
                            Id = 1019,
                            Name = "Fudbalski Osvajači",
                            TeamId = 1010
                        },
                        new
                        {
                            Id = 1020,
                            Name = "Zeleni Tereni",
                            TeamId = 1010
                        },
                        new
                        {
                            Id = 1021,
                            Name = "Odbojkaške Zvijezde",
                            TeamId = 1011
                        },
                        new
                        {
                            Id = 1022,
                            Name = "Blokeri",
                            TeamId = 1011
                        },
                        new
                        {
                            Id = 1023,
                            Name = "Mrežni Napadači",
                            TeamId = 1012
                        },
                        new
                        {
                            Id = 1024,
                            Name = "Ofanzivaši",
                            TeamId = 1012
                        },
                        new
                        {
                            Id = 1025,
                            Name = "Crvene Strijele",
                            TeamId = 1013
                        },
                        new
                        {
                            Id = 1026,
                            Name = "Zlatni Orlovi",
                            TeamId = 1013
                        },
                        new
                        {
                            Id = 1027,
                            Name = "Ledeni Tigrovi",
                            TeamId = 1014
                        },
                        new
                        {
                            Id = 1028,
                            Name = "Sivi Vjetrovi",
                            TeamId = 1014
                        },
                        new
                        {
                            Id = 1029,
                            Name = "Plavi Talasi",
                            TeamId = 1015
                        },
                        new
                        {
                            Id = 1030,
                            Name = "Vatreni Klizači",
                            TeamId = 1015
                        },
                        new
                        {
                            Id = 1031,
                            Name = "Sjene Ulice",
                            TeamId = 1016
                        },
                        new
                        {
                            Id = 1032,
                            Name = "Noćni Jahači",
                            TeamId = 1016
                        },
                        new
                        {
                            Id = 1033,
                            Name = "Tihi Ubice",
                            TeamId = 1017
                        },
                        new
                        {
                            Id = 1034,
                            Name = "Brze Strele",
                            TeamId = 1017
                        },
                        new
                        {
                            Id = 1035,
                            Name = "Bijeli Medvjedi",
                            TeamId = 1018
                        },
                        new
                        {
                            Id = 1036,
                            Name = "Leteći Zmajevi",
                            TeamId = 1019
                        },
                        new
                        {
                            Id = 1037,
                            Name = "Plameni Šampioni",
                            TeamId = 1019
                        },
                        new
                        {
                            Id = 1038,
                            Name = "Graditelji Igre",
                            TeamId = 1020
                        },
                        new
                        {
                            Id = 1039,
                            Name = "Zlatni Asovi",
                            TeamId = 1020
                        },
                        new
                        {
                            Id = 1040,
                            Name = "Timski Strijelci",
                            TeamId = 1021
                        },
                        new
                        {
                            Id = 1041,
                            Name = "Munjeviti Servisi",
                            TeamId = 1022
                        },
                        new
                        {
                            Id = 1042,
                            Name = "Lavlje Srce",
                            TeamId = 1023
                        },
                        new
                        {
                            Id = 1043,
                            Name = "Nezaustavljivi",
                            TeamId = 1023
                        },
                        new
                        {
                            Id = 1044,
                            Name = "Taktički Umovi",
                            TeamId = 1024
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaptainId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("JoinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sport")
                        .HasColumnType("int");

                    b.Property<byte[]>("TeamPicture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaptainId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            CaptainId = 10,
                            City = "Mostar",
                            Description = "Najjači futsal tim u gradu.",
                            IsPublic = true,
                            Name = "Jaguars",
                            Sport = 3
                        },
                        new
                        {
                            Id = 102,
                            CaptainId = 10,
                            City = "Mostar",
                            Description = "Elitna ekipa za odbojku na pijesku.",
                            IsPublic = false,
                            JoinCode = "JOIN2",
                            Name = "Desert Foxes",
                            Sport = 5
                        },
                        new
                        {
                            Id = 103,
                            CaptainId = 11,
                            City = "Travnik",
                            Description = "Zaljubljenici u košarku, zajedno na terenu.",
                            IsPublic = true,
                            Name = "Sky Dunkers",
                            Sport = 2
                        },
                        new
                        {
                            Id = 104,
                            CaptainId = 11,
                            City = "Travnik",
                            Description = "Teniski klub za sve uzrast.",
                            IsPublic = false,
                            JoinCode = "JOIN4",
                            Name = "Urban Hawks",
                            Sport = 8
                        },
                        new
                        {
                            Id = 105,
                            CaptainId = 12,
                            City = "Sarajevo",
                            Description = "Najbolji odbojkaški tim u gradu.",
                            IsPublic = true,
                            Name = "Volley Ninjas",
                            Sport = 4
                        },
                        new
                        {
                            Id = 106,
                            CaptainId = 12,
                            City = "Sarajevo",
                            Description = "Akcija i strast prema rukometu.",
                            IsPublic = false,
                            JoinCode = "JOIN6",
                            Name = "Handball Heroes",
                            Sport = 7
                        },
                        new
                        {
                            Id = 107,
                            CaptainId = 13,
                            City = "Sarajevo",
                            Description = "Brzina i snaga u futsalu.",
                            IsPublic = true,
                            Name = "Thunderballs",
                            Sport = 3
                        },
                        new
                        {
                            Id = 108,
                            CaptainId = 13,
                            City = "Zenica",
                            Description = "Tim za taktičku košarku",
                            IsPublic = false,
                            JoinCode = "JOIN8",
                            Name = "Court Kings",
                            Sport = 2
                        },
                        new
                        {
                            Id = 109,
                            CaptainId = 14,
                            City = "Zenica",
                            Description = "Vladari terena na pijesku..",
                            IsPublic = true,
                            Name = "Beach Storm",
                            Sport = 5
                        },
                        new
                        {
                            Id = 1010,
                            CaptainId = 14,
                            City = "Tuzla",
                            Description = "Šampioni mini fudbala.",
                            IsPublic = false,
                            JoinCode = "JOIN10",
                            Name = "Field Blazers",
                            Sport = 6
                        },
                        new
                        {
                            Id = 1011,
                            CaptainId = 15,
                            City = "Tuzla",
                            Description = "Odbojkaška izvrsnost i timski duh.",
                            IsPublic = true,
                            Name = "The Smashers",
                            Sport = 4
                        },
                        new
                        {
                            Id = 1012,
                            CaptainId = 15,
                            City = "Tuzla",
                            Description = "Furija na rukometnom terenu.",
                            IsPublic = false,
                            JoinCode = "JOIN12",
                            Name = "Net Raiders",
                            Sport = 7
                        },
                        new
                        {
                            Id = 1013,
                            CaptainId = 10,
                            City = "Mostar",
                            Description = "Strastveni tim futsal entuzijasta.",
                            IsPublic = true,
                            Name = "Futsal Wolves",
                            Sport = 3
                        },
                        new
                        {
                            Id = 1014,
                            CaptainId = 10,
                            City = "Mostar",
                            Description = "Dominacija na pijesku.",
                            IsPublic = false,
                            JoinCode = "JOIN14",
                            Name = "Sand Blazers",
                            Sport = 5
                        },
                        new
                        {
                            Id = 1015,
                            CaptainId = 11,
                            City = "Travnik",
                            Description = "Visoko leteći košarkaški tim.",
                            IsPublic = true,
                            Name = "Airball Masters",
                            Sport = 2
                        },
                        new
                        {
                            Id = 1016,
                            CaptainId = 11,
                            City = "Travnik",
                            Description = "Stručnjaci za teniske duele.",
                            IsPublic = false,
                            JoinCode = "JOIN16",
                            Name = "Net Aces",
                            Sport = 8
                        },
                        new
                        {
                            Id = 1017,
                            CaptainId = 12,
                            City = "Sarajevo",
                            Description = "Vladari mreže u Sarajevu.",
                            IsPublic = true,
                            Name = "Volley Kings",
                            Sport = 4
                        },
                        new
                        {
                            Id = 1018,
                            CaptainId = 12,
                            City = "Sarajevo",
                            Description = "Nepobjedivi rukometni tim.",
                            IsPublic = false,
                            JoinCode = "JOIN18",
                            Name = "Handball Titans",
                            Sport = 7
                        },
                        new
                        {
                            Id = 1019,
                            CaptainId = 13,
                            City = "Sarajevo",
                            Description = "Brzi napadi i čvrsta odbrana.",
                            IsPublic = true,
                            Name = "Futsal Tornado",
                            Sport = 3
                        },
                        new
                        {
                            Id = 1020,
                            CaptainId = 13,
                            City = "Zenica",
                            Description = "Eksplozivan stil igre pod obručima.",
                            IsPublic = false,
                            JoinCode = "JOIN20",
                            Name = "Basket Blitz",
                            Sport = 2
                        },
                        new
                        {
                            Id = 1021,
                            CaptainId = 14,
                            City = "Zenica",
                            Description = "Specijalisti za beach volley turnire.",
                            IsPublic = true,
                            Name = "Sand Kings",
                            Sport = 5
                        },
                        new
                        {
                            Id = 1022,
                            CaptainId = 14,
                            City = "Tuzla",
                            Description = "Neprekidna akcija na malim terenima.",
                            IsPublic = false,
                            JoinCode = "JOIN22",
                            Name = "Mini Football Force",
                            Sport = 6
                        },
                        new
                        {
                            Id = 1023,
                            CaptainId = 15,
                            City = "Tuzla",
                            Description = "Grmljavina na mreži.",
                            IsPublic = true,
                            Name = "VolleyStorm",
                            Sport = 4
                        },
                        new
                        {
                            Id = 1024,
                            CaptainId = 15,
                            City = "Tuzla",
                            Description = "Tim s najoštrijim napadima.",
                            IsPublic = false,
                            JoinCode = "JOIN24",
                            Name = "Throwmasters",
                            Sport = 7
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Email = "jasmin.smajic@gmail.com",
                            FirstName = "Jasmin",
                            LastName = "Smajic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061111111",
                            Role = 1,
                            UserName = "jasmin"
                        },
                        new
                        {
                            Id = 6,
                            Email = "fatih.drek@gmail.com",
                            FirstName = "Fatih",
                            LastName = "Drek",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "062222222",
                            Role = 1,
                            UserName = "fatih"
                        },
                        new
                        {
                            Id = 7,
                            Email = "mehmed.dervisic@gmail.com",
                            FirstName = "Mehmed",
                            LastName = "Dervisic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "063333333",
                            Role = 1,
                            UserName = "mehmed"
                        },
                        new
                        {
                            Id = 8,
                            Email = "amra.hadzic@gmail.com",
                            FirstName = "Amra",
                            LastName = "Hadzic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "064444444",
                            Role = 1,
                            UserName = "amra"
                        },
                        new
                        {
                            Id = 9,
                            Email = "tarik.kljucanin@gmail.com",
                            FirstName = "Tarik",
                            LastName = "Kljucanin",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "065555555",
                            Role = 1,
                            UserName = "tarik"
                        },
                        new
                        {
                            Id = 901,
                            Email = "elma.karic@gmail.com",
                            FirstName = "Elmma",
                            LastName = "Karic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "066666666",
                            Role = 1,
                            UserName = "elmma"
                        },
                        new
                        {
                            Id = 902,
                            Email = "dino.begovic@gmail.com",
                            FirstName = "Dino",
                            LastName = "Begovic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "067777777",
                            Role = 1,
                            UserName = "dino"
                        },
                        new
                        {
                            Id = 900,
                            Email = "lejla.softic@gmail.com",
                            FirstName = "Kasim",
                            LastName = "Softic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "068888888",
                            Role = 1,
                            UserName = "kasim"
                        },
                        new
                        {
                            Id = 903,
                            Email = "adnan.suljic@gmail.com",
                            FirstName = "Adnan",
                            LastName = "Suljic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "069999999",
                            Role = 1,
                            UserName = "adnann"
                        },
                        new
                        {
                            Id = 904,
                            Email = "emina.celik@gmail.com",
                            FirstName = "Emina",
                            LastName = "Celik",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000001",
                            Role = 1,
                            UserName = "eminna"
                        },
                        new
                        {
                            Id = 905,
                            Email = "mirza.cengic@gmail.com",
                            FirstName = "Mirza",
                            LastName = "Cengic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000002",
                            Role = 1,
                            UserName = "mirzaa"
                        },
                        new
                        {
                            Id = 906,
                            Email = "alma.salihovic@gmail.com",
                            FirstName = "Alma",
                            LastName = "Salihovic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000003",
                            Role = 1,
                            UserName = "almaa"
                        },
                        new
                        {
                            Id = 907,
                            Email = "emirr.avdic@gmail.com",
                            FirstName = "Emirr",
                            LastName = "Avdic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000004",
                            Role = 1,
                            UserName = "emirr"
                        },
                        new
                        {
                            Id = 908,
                            Email = "ajla.redzic@gmail.com",
                            FirstName = "Ajla",
                            LastName = "Redzic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000005",
                            Role = 1,
                            UserName = "ajlaa"
                        },
                        new
                        {
                            Id = 909,
                            Email = "tarik.selimovic@gmail.com",
                            FirstName = "Tarikk",
                            LastName = "Selimovic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061000006",
                            Role = 1,
                            UserName = "tselimovic"
                        },
                        new
                        {
                            Id = 10,
                            Email = "haris.orahovcic@gmail.com",
                            FirstName = "Haris",
                            LastName = "Orahovcic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "066666666",
                            Rating = 4.7000000000000002,
                            Role = 2,
                            UserName = "haris"
                        },
                        new
                        {
                            Id = 11,
                            Email = "selma.kovacevic@gmail.com",
                            FirstName = "Selma",
                            LastName = "Kovacevic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "067777777",
                            Rating = 4.9000000000000004,
                            Role = 2,
                            UserName = "selma"
                        },
                        new
                        {
                            Id = 12,
                            Email = "adnan.avdic@gmail.com",
                            FirstName = "Adnan",
                            LastName = "Avdic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "068888888",
                            Rating = 4.2999999999999998,
                            Role = 2,
                            UserName = "adnan"
                        },
                        new
                        {
                            Id = 13,
                            Email = "lejla.mujic@gmail.com",
                            FirstName = "Lejla",
                            LastName = "Mujic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "069999999",
                            Rating = 4.7999999999999998,
                            Role = 2,
                            UserName = "lejla"
                        },
                        new
                        {
                            Id = 14,
                            Email = "nermin.besic@gmail.com",
                            FirstName = "Nermin",
                            LastName = "Besic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "060000000",
                            Rating = 4.5,
                            Role = 2,
                            UserName = "nermin"
                        },
                        new
                        {
                            Id = 15,
                            Email = "amir.hodzic@gmail.com",
                            FirstName = "Amir",
                            LastName = "Hodzic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "061111111",
                            Rating = 4.2000000000000002,
                            Role = 2,
                            UserName = "amir"
                        },
                        new
                        {
                            Id = 16,
                            Email = "sara.jusic@gmail.com",
                            FirstName = "Sara",
                            LastName = "Jusic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "062222222",
                            Rating = 4.7000000000000002,
                            Role = 2,
                            UserName = "sara"
                        },
                        new
                        {
                            Id = 17,
                            Email = "denis.kovac@gmail.com",
                            FirstName = "Denis",
                            LastName = "Kovac",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "063333333",
                            Rating = 4.4000000000000004,
                            Role = 2,
                            UserName = "denis"
                        },
                        new
                        {
                            Id = 18,
                            Email = "mina.babic@gmail.com",
                            FirstName = "Mina",
                            LastName = "Babic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "064444444",
                            Rating = 4.5999999999999996,
                            Role = 2,
                            UserName = "mina"
                        },
                        new
                        {
                            Id = 19,
                            Email = "tarik.smajic@gmail.com",
                            FirstName = "Tarik",
                            LastName = "Smajic",
                            PasswordHash = "3EFEQlQZjf3kG0XeIHypLAeDV4eSoUqzgusQKPym8XI=",
                            PasswordSalt = "qHezRy4tctFldw+F9iJFGLbnG0Ft8UaeitvSMk3V5yYHxNkWdxxcXgxzJlYsiLR8OuBY0hyvwrzUOdhbDj6+4g==",
                            PhoneNumber = "065555555",
                            Rating = 4.2999999999999998,
                            Role = 2,
                            UserName = "tarik"
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserSport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Sport")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Sport = 1,
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            Sport = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            Sport = 8,
                            UserId = 10
                        },
                        new
                        {
                            Id = 4,
                            Sport = 4,
                            UserId = 11
                        },
                        new
                        {
                            Id = 5,
                            Sport = 1,
                            UserId = 11
                        },
                        new
                        {
                            Id = 6,
                            Sport = 6,
                            UserId = 12
                        },
                        new
                        {
                            Id = 7,
                            Sport = 7,
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            Sport = 2,
                            UserId = 13
                        },
                        new
                        {
                            Id = 9,
                            Sport = 8,
                            UserId = 13
                        },
                        new
                        {
                            Id = 10,
                            Sport = 1,
                            UserId = 14
                        },
                        new
                        {
                            Id = 11,
                            Sport = 5,
                            UserId = 14
                        },
                        new
                        {
                            Id = 12,
                            Sport = 2,
                            UserId = 15
                        },
                        new
                        {
                            Id = 13,
                            Sport = 3,
                            UserId = 16
                        },
                        new
                        {
                            Id = 14,
                            Sport = 8,
                            UserId = 16
                        },
                        new
                        {
                            Id = 15,
                            Sport = 7,
                            UserId = 16
                        },
                        new
                        {
                            Id = 16,
                            Sport = 1,
                            UserId = 17
                        },
                        new
                        {
                            Id = 17,
                            Sport = 3,
                            UserId = 17
                        },
                        new
                        {
                            Id = 18,
                            Sport = 4,
                            UserId = 18
                        },
                        new
                        {
                            Id = 19,
                            Sport = 2,
                            UserId = 19
                        },
                        new
                        {
                            Id = 20,
                            Sport = 6,
                            UserId = 19
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserSquad", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("SquadId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SquadId");

                    b.HasIndex("SquadId");

                    b.ToTable("UsersSquad");

                    b.HasData(
                        new
                        {
                            UserId = 10,
                            SquadId = 101
                        },
                        new
                        {
                            UserId = 11,
                            SquadId = 102
                        },
                        new
                        {
                            UserId = 12,
                            SquadId = 102
                        },
                        new
                        {
                            UserId = 15,
                            SquadId = 102
                        },
                        new
                        {
                            UserId = 17,
                            SquadId = 102
                        },
                        new
                        {
                            UserId = 18,
                            SquadId = 101
                        },
                        new
                        {
                            UserId = 19,
                            SquadId = 101
                        },
                        new
                        {
                            UserId = 10,
                            SquadId = 103
                        },
                        new
                        {
                            UserId = 13,
                            SquadId = 104
                        },
                        new
                        {
                            UserId = 11,
                            SquadId = 105
                        },
                        new
                        {
                            UserId = 14,
                            SquadId = 106
                        },
                        new
                        {
                            UserId = 11,
                            SquadId = 107
                        },
                        new
                        {
                            UserId = 12,
                            SquadId = 109
                        },
                        new
                        {
                            UserId = 10,
                            SquadId = 1010
                        },
                        new
                        {
                            UserId = 12,
                            SquadId = 1011
                        },
                        new
                        {
                            UserId = 11,
                            SquadId = 1012
                        },
                        new
                        {
                            UserId = 13,
                            SquadId = 1013
                        },
                        new
                        {
                            UserId = 12,
                            SquadId = 1014
                        },
                        new
                        {
                            UserId = 13,
                            SquadId = 1015
                        },
                        new
                        {
                            UserId = 13,
                            SquadId = 1016
                        },
                        new
                        {
                            UserId = 14,
                            SquadId = 1017
                        },
                        new
                        {
                            UserId = 14,
                            SquadId = 1019
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserTeam", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCaptain")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("UserTeams");

                    b.HasData(
                        new
                        {
                            UserId = 10,
                            TeamId = 101,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 10,
                            TeamId = 102,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 103,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 104,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 105,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 106,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 107,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 108,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 109,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1010,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1011,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1012,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 102,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 103,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 104,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 10,
                            TeamId = 105,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 106,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 107,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1011,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 109,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 16,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 17,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 18,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 19,
                            TeamId = 101,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 16,
                            TeamId = 104,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 17,
                            TeamId = 104,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 18,
                            TeamId = 104,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 19,
                            TeamId = 104,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 10,
                            TeamId = 1013,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 10,
                            TeamId = 1014,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 1015,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 1016,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 1017,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 1018,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 1019,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 1020,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1021,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1022,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1023,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1024,
                            IsCaptain = true
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 16,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 17,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 18,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 19,
                            TeamId = 1013,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 1014,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 12,
                            TeamId = 1015,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 13,
                            TeamId = 1016,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 14,
                            TeamId = 1017,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 15,
                            TeamId = 1018,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 16,
                            TeamId = 1019,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 17,
                            TeamId = 1020,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 18,
                            TeamId = 1021,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 19,
                            TeamId = 1022,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 10,
                            TeamId = 1023,
                            IsCaptain = false
                        },
                        new
                        {
                            UserId = 11,
                            TeamId = 1024,
                            IsCaptain = false
                        });
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Comment", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Match", "Match")
                        .WithMany("Comments")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Match", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Team", "Team")
                        .WithMany("Matches")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.MatchAttendance", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Match", "Match")
                        .WithMany("MatchAttendances")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Reservation", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.SportsField", "SportsField")
                        .WithMany("Reservations")
                        .HasForeignKey("SportsFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportsField");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Review", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.SportsCenter", "SportsCenter")
                        .WithMany("Reviews")
                        .HasForeignKey("SportsCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportsCenter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsCenter", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.User", "Manager")
                        .WithOne("SportsCenter")
                        .HasForeignKey("WeNeed1.Service.Database.SportsCenter", "ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsCenterRecommendation", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.SportsCenter", "BaseSportsCenter")
                        .WithMany("BaseRecommendations")
                        .HasForeignKey("BaseSportsCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.SportsCenter", "RecommendedSportsCenter")
                        .WithMany("RecommendedBy")
                        .HasForeignKey("RecommendedSportsCenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaseSportsCenter");

                    b.Navigation("RecommendedSportsCenter");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsField", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.SportsCenter", "SportsCenter")
                        .WithMany("SportsFields")
                        .HasForeignKey("SportsCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportsCenter");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsTeamRecommendation", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Team", "BaseTeam")
                        .WithMany("BaseRecommendations")
                        .HasForeignKey("BaseTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.Team", "RecommendedTeam")
                        .WithMany("RecommendedBy")
                        .HasForeignKey("RecommendedTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaseTeam");

                    b.Navigation("RecommendedTeam");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Squad", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Team", "Team")
                        .WithMany("Squads")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", null)
                        .WithMany("Squads")
                        .HasForeignKey("UserId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Team", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.User", "Captain")
                        .WithMany()
                        .HasForeignKey("CaptainId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Captain");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserSport", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany("UserSports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserSquad", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Squad", "Squad")
                        .WithMany("UserSquads")
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Squad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.UserTeam", b =>
                {
                    b.HasOne("WeNeed1.Service.Database.Team", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeNeed1.Service.Database.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Match", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("MatchAttendances");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsCenter", b =>
                {
                    b.Navigation("BaseRecommendations");

                    b.Navigation("RecommendedBy");

                    b.Navigation("Reviews");

                    b.Navigation("SportsFields");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.SportsField", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Squad", b =>
                {
                    b.Navigation("UserSquads");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.Team", b =>
                {
                    b.Navigation("BaseRecommendations");

                    b.Navigation("Matches");

                    b.Navigation("RecommendedBy");

                    b.Navigation("Squads");

                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("WeNeed1.Service.Database.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reservations");

                    b.Navigation("SportsCenter");

                    b.Navigation("Squads");

                    b.Navigation("UserSports");

                    b.Navigation("UserTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
